GAMS 33.2.0  r4f23b21 Released Dec  1, 2020 WEX-WEI x86 64bit/MS Windows - 06/16/21 23:18:03 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1   
      Title Optimization model for Glen Canyon Dam releases to favor Bugs popula
      tion. (April 2018)
       
      ###################################
      Created By: Moazzam Ali Rind
      Email: moazzamalirind@gmail.com
       
      Created : 6/15/2020
      Last updated: 4/6/2021
       
      Description: This model was developed to qaunitfy the trade-off between nu
      mber of steady low flow days and hydropower revenue objectives.
                  The model has 2 periods per day (i.e. pHigh and plow), two typ
      es of days (Weekend and Weekday), and runs for a month. we have used linea
      r programming to solve the problem.
                  All the structural and operational constraints applied here ar
      e uptodate.
       
      ######################################
  18   
  19  ****Model code
  20   
  21  Set
  22   
  23            d                             days in April
  24            p                             time period during a day /pLow "Lo
      w flow period",pHigh "High flow period"/
  25            tot_vol                       Total montly release volume (acre-
      ft)/V1*V5/
  26            modpar                        Saving model status for each of th
      e scenario solution/ ModStat "Model Status", SolStat "Solve Status"/
  27            case                          Defining constrainted cases for nu
      mber of low flow steady days /case1*case12/
  28            Wkn                           Scenarios to decide the change bet
      ween off-peak release on weekday and weekend steady flows /H1*H4/
  29  ;
  30   
  31   
  32  *======================================
  33  *Parameters
  34  *======================================
  35   
  36  PARAMETERS
  37   
  38  FStore(Wkn,tot_vol,case)                          Storing objective functi
      on values over different scenarios
  39   
  40  XStore_steady(Wkn,tot_vol,case)                   Store Energy Generated d
      uring steady flow days over different cases (MWH)
  41  XStore_unsteady(Wkn,tot_vol,case)                 Store Energy Generated d
      uring unsteady flow days over different cases (MWH)
  42   
  43  RStore_steady(Wkn,tot_vol,case,p)                 Store Release values dur
      ing steady flow days over different cases(cfs)
  44  RStore_unsteady(Wkn,tot_vol,case,p)               Store Release values dur
      ing unsteady flow days over different cases(cfs)
  45   
  46  Sstore(Wkn,tot_vol,case)                          Store Storage Values ove
      r different cases(ac-ft)
  47   
  48  ModelResults(Wkn,tot_vol,case,modpar)             Store solution status of
       the scenarios i.e. whether the solution found is optimal or not?
  49  Mar_Ramp(Wkn,tot_vol,case,p)                      To save margninal values
       associted with the ramp rate.
  50   
  51   
  52  initstorage                            Initial reservoir storage on 1st Ap
      ril 2018 (acre-ft)/12948951/
  53  maxstorage                             Reservoir capacity (acre-ft)/250000
      00/
  54  minstorage                             Minimum reservoir storage to mainta
      in hydropower level(acre-ft) /5892163/
  55  Inflow(d)                              Inflow to reservoir (cfs)
  56  maxRel                                 Maximum release in a day d at any t
      imeperiod p(cfs)/31500/
  57  minRel                                 Minimum release in a day d at any t
      imeperiod p(cfs)/8000/
  58  evap(d)                                Evaporation (ac-ft per day)
  59  EnergyRate(p)                         Energy prices on weekdays ($ per MWH
      ) /pLow 38.24, pHigh 55.054/
  60  weekendRate(p)                        Energy prices on weekends ($ per MWH
      ) /pLow 38.24, pHigh 38.24/
  61  Duration(p)                           Duration of period (hours)
  62  Vol_monthlyrelease(tot_vol)           Different Total volumes of water to 
      be released in the month i.e. April 2018 in presented case (acre-ft)/V1 70
      0000,V2 800000,V3 900000,V4 1000000,V5 1100000/
  63  TotMonth_volume                       To represent total monthly volume (a
      cre-ft)
  64  Steady_Days                           To represent the number of steady lo
      w flow days
  65  Num_steady(case)                      Number of steady low flow days/case1
       0, case2 4,case3 6, case4 7, case5 8, case6 9,case7 10,case8 12,case9 15,
      case10 20,case11 25,case12 30/
  66  Weekend_Rel                           Additional release made on weekend i
      ncomparison to weekday off-peak release(cfs).
  67  Diff_Release(Wkn)                     Differnce between off-peak weekday r
      elease and weekend release(cfs)/H1 0, H2 500, H3 750, H4 1000/
  68  ;
  69   
  70   
  71  Duration("pLow")= 8;
  72  * low period weightage in a day(08 Hours or 8 by 24 i.e:0.33 of day)
  73   
  74  Duration("pHigh")= 16;
  75  *  High period weightage in a day( 16 Hours or 16 by 24 i.e:0.67 of day)
  76   
  77  *===================================================
  78  * Read data from Excel
  79  *===================================================
  81   
  82  *Write the input Data into a GDX file
**** File: E:\Class project\GCD_BugFlowExperiment\June 2018\Saturday Model\April
                                                               2018(Weekend).gdx
**** Msg : No such file or directory
  83  $GDXIN April2018(Weekend).gdx
****                              $510
**** 510  Unable to open gdx file for $GDXIN
  84   
  85  * loading parameters and input data from the GDX file into the model
  86  $LOAD d
****      $502
**** 502  GDXIN  file not open - ignore rest of line
  87  $LOAD inflow
****      $502
**** 502  GDXIN  file not open - ignore rest of line
  88  $LOAD evap
****      $502
**** 502  GDXIN  file not open - ignore rest of line
  89   
  90  *Close the GDX file
  92   
  93  Display d, inflow, evap, p, Duration;
****          $141    $141  $141
**** 141  Symbol declared but no values have been assigned. Check for missing
****         data definition, assignment, data loading or implicit assignment
****         via a solve statement.
****         A wild shot: You may have spurious commas in the explanatory
****         text of a declaration. Check symbol reference list.
  94  *===============================================
  95  SCALAR
  96  Convert                       conversion factor from cfs to ac-ft per hour
       (0.0014*60)/0.083/
  97  Totaldays                     Total number of days in the month/30/
  98  weekdays                      Number of days in month/22/
  99  weekends                       Number of weekend days in the month /8/
 100  Num_of_timesteps              Total Number of timesteps used /60/
 101  Daily_RelRange                Allowable daily release range (cfs)/8000/
 102   
 103  *Here we are considering an arbitrary monthly calender with exact number o
      f days as in real month but that considered month starts on monday.
 104  *Which means there will be 4 Saturdays and 4 Sundays in the month. We are 
      considering any holidays in the month.
 105  *The real monthly calender can be easily used by changing the number of da
      ys of each day type, if required.
 106   
 107  VARIABLES
 108   
 109  ObjectiveVal                   Objective functions calculation
 110  storage                        reservoir storage at the end of the month (
      acre-ft)
 111  release(p)                     reservoir release on any unsteady day in an
      y period p (cfs)
 112  Energy_Gen(p)                  Hydropower Generated for each timestep duri
      ng unsteady flow days (MWH)
 113  SteadyEn_Gen(p)                Hydropower Generated for each timestep duri
      ng steady flow days (MWH)
 114  Steady_Release                 Minimum release value of the hydrograph
 115   
 116  Avail_Water                    Total Water available in the system during 
      the month (June)
 117  steady_Outflow                 Volume of water released in the steady low 
      flow days (acre-ft)
 118  unsteady_Outflow               Volume of water released in the unsteay low
       flow days (acre-ft)
 119   
 120  ;
 121   
 122   
 123  EQUATIONS
 124  *AND CONSTRAINTS
 125   
 126  EQa_Inflow                   Total volume of Water available in the system
       during the month (acre-ft)
 127  EQb_SteadyOutflow            Volume of Water released during the steady da
      ys (acre-ft)
 128  EQc_UnSteadyOutflow          Volume of Water released during the unsteady 
      days (acre-ft)
 129   
 130  EQ1__ResMassBal              Reservoir mass balance (acre-ft)
 131  EQ2__reqpowerstorage         The minimum storage equivalent to reservoir l
      evel required for hydropower generation (acre-ft)
 132  EQ3__maxstor                 res storage max (acre-ft)
 133  EQ4__MaxR(p)                 Max Release (cfs)
 134  EQ5__MinR(p)                 Min Release  (cfs)
 135  EQ6_Rel_Range(p)             Constraining the daily release range on a wee
      kday (cfs per day)
 136  EQ7__Monthtlyrel             Constraining Total monthly volume of water to
       be released (acre-ft)
 137  EQ8_Steadyflow               Minimun release value within the hydrograph(c
      fs)
 138  EQ9_SteadyEnergy(p)          Energy generated in each time step during ste
      ady flow days (MWH)
 139  EQ10_EnergyGen(p)            Energy generated in each time step during uns
      teady flow days (MWH)
 140  EQ11_EnergyGen_Max(p)        Maximum Energy Generation Limit of the Glen C
      aynon Dam(MW)
 141  EQ12_EnergyRevenue           Total monthly Hydropower Revenue generated wh
      en number of steady low flow day are greater than number of weekend days($
      )
 142  EQ13_Revenue                 Total monthly Hydropower Renvenue generated i
      f number of steady flow days are equal or less than weekend days ($)
 143  ;
 144   
 145  *-------------------------------------------------------------------------
      -----*
 146   
 147   
 148  EQa_Inflow..                 Avail_Water =e= initstorage + sum(d,inflow(d)
      *Convert*sum(p,Duration(p)));
 149  EQb_SteadyOutflow..          steady_Outflow =e= Steady_Release*sum(p,Durat
      ion(p))*Convert*Steady_Days;
 150  EQc_UnSteadyOutflow..        unsteady_Outflow =e= sum(p,release(p)*Convert
      *Duration(p))*(Totaldays-Steady_Days);
 151   
 152   
 153  EQ1__ResMassBal..           storage =e= Avail_Water-steady_Outflow-unstead
      y_Outflow-sum(d,evap(d));
 154  EQ2__reqpowerstorage..      storage =g= minstorage;
 155  EQ3__maxstor..              storage =l= maxstorage;
 156   
 157  EQ4__MaxR(p)..              release(p)=l= maxRel;
 158  EQ5__MinR(p)..              release(p)=g= minRel;
 159  EQ6_Rel_Range(p)..          release("pHigh")-release("pLow")=l=Daily_RelRa
      nge;
 160   
 161  *EQ7_  constraining the overall monthly released volume..
 162  EQ7__Monthtlyrel..                         TotMonth_volume=e= steady_Outfl
      ow + unsteady_Outflow;
 163   
 164  EQ8_Steadyflow..                           Steady_Release=e=release("pLow"
      )+ Weekend_Rel;
 165  * EQ8_  finds the minimimum release value from the hydrograph. This equati
      on also takes care of ramprate bewtween unsteady high release and steady r
      elease.
 166   
 167  EQ9_SteadyEnergy(p)..                      SteadyEn_Gen(p)=e= Steady_Relea
      se*Duration(p)*0.03715;
 168  * Energy generation formula used in wapa Execl model.
 169   
 170  EQ10_EnergyGen(p)..                         Energy_Gen(p)=e= release(p)*Du
      ration(p)*0.03715;
 171  * Energy generation formula used in wapa Execl model..
 172   
 173  EQ11_EnergyGen_Max(p)..                    Energy_Gen(p)=l= 1320*Duration(
      p);
 174  *Maximum Energy Generation capacity of GCD (MWH).. Source https://www.usbr
      .gov/uc/rm/crsp/gc/
 175   
 176  EQ12_EnergyRevenue..                       ObjectiveVal=e= sum(p,SteadyEn_
      Gen(p)*weekendRate(p))*weekends + sum(p,SteadyEn_Gen(p)*EnergyRate(p))*(St
      eady_Days-weekends)+ sum(p,Energy_Gen(p)*EnergyRate(p))*(Totaldays-Steady_
      Days);
 177  * *This equation works for number of steady days greater than number of we
      ekend days.
 178   
 179  EQ13_Revenue..                             ObjectiveVal=e= sum(p,SteadyEn_
      Gen(p)*weekendRate(p))*(Steady_Days) + sum(p,Energy_Gen(p)*weekendRate(p))
      *(weekends - Steady_Days)+ sum(p,Energy_Gen(p)*EnergyRate(p))*(Totaldays-w
      eekends);
 180  *This equation works for number of steady days either equal or less than w
      eekend days.  This equation price all the weekend days by weekned rate irr
      espective of whether its steady or hydropeaking day.
 181   
 182  *-------------------------------------------------------------------------
      -----*
 183   
 184  ***************************************************
 185  ******Linearization Model
 186  ****************************************** ********
 187   
 188  MODEL Model1 Find value of hydropower revenue using LP/EQa_Inflow,EQb_Stea
      dyOutflow,EQc_UnSteadyOutflow,EQ1__ResMassBal,EQ2__reqpowerstorage,EQ3__ma
      xstor,EQ4__MaxR,EQ5__MinR,EQ6_Rel_Range,EQ7__Monthtlyrel,EQ8_Steadyflow,EQ
      9_SteadyEnergy,EQ10_EnergyGen,EQ11_EnergyGen_Max,EQ12_EnergyRevenue/;
 189  *this Model will work under scenarios when number of steady low bug flow d
      ays are greater than number of weekned days.
 190   
 191  *This line provides additional information in the .lst file. If you not aw
      are of option file please comment it out or remove before running the mode
      l
 192  *Model1.optfile = 1;
 193   
 194  Model Model2 Find value of hydropower revenue using LP /EQa_Inflow,EQb_Ste
      adyOutflow,EQc_UnSteadyOutflow,EQ1__ResMassBal,EQ2__reqpowerstorage,EQ3__m
      axstor,EQ4__MaxR,EQ5__MinR,EQ6_Rel_Range,EQ7__Monthtlyrel,EQ8_Steadyflow,E
      Q9_SteadyEnergy,EQ10_EnergyGen,EQ11_EnergyGen_Max,EQ13_Revenue/;
 195  *this Model will work under scenarios when number of steady low bug flow d
      ays are less than or equal to number of weekned days.
 196   
 197  *This line provides additional information in the .lst file. If you are no
      t aware of option file please comment it out or remove before running the 
      model
 198  *Model2.optfile = 1;
 199   
 200   
 201  *Looping over different additional weekend, total volume, and number of st
      eay days scenarios
 202  loop((Wkn,tot_vol,case),
 203   
 204  option reslim=20000;
 205  option Threads=6;
 206  option optcr=0.001;
 207  option LP= CPLEX;
 208  release.L(p) = 10000;
 209  Steady_Release.L= 8000;
 210     Weekend_Rel= Diff_Release(Wkn);
 211     TotMonth_volume = Vol_monthlyrelease(tot_vol);
 212     Steady_Days = Num_steady(case)+ EPS;
 213   
 214  if  (Steady_Days > weekends,
 215       SOLVE Model1 USING LP maximize ObjectiveVal;
****                                                  $257
**** 257  Solve statement not checked because of previous errors
 216  else SOLVE Model2 USING LP maximize ObjectiveVal;
****                                                  $257
**** 257  Solve statement not checked because of previous errors
 217  );
 218   
 219   
 220  * All the following lines of code are saving values for different paramete
      rs
 221     FStore(Wkn,tot_vol,case)= ObjectiveVal.L;
****                                            $141
**** 141  Symbol declared but no values have been assigned. Check for missing
****         data definition, assignment, data loading or implicit assignment
****         via a solve statement.
****         A wild shot: You may have spurious commas in the explanatory
****         text of a declaration. Check symbol reference list.
 222     XStore_steady(Wkn,tot_vol,case)= (Steady_Release.L*sum(p,Duration(p))*0
      .03715)*Num_steady(case);
 223     XStore_unsteady(Wkn,tot_vol,case)= sum(p,release.L(p)*Duration(p)*0.037
      15)*(Totaldays-Num_steady(case));
 224     RStore_steady(Wkn,tot_vol,"case1",p)= 0 + EPS;
 225  *************************************************
 226     RStore_steady(Wkn,tot_vol,case,p)= Steady_Release.L;
 227   
 228     RStore_unsteady(Wkn,tot_vol,case,p)= release.L(p);
 229  *********************************************************************
 230   
 231      RStore_unsteady(Wkn,tot_vol,"case12",p)= 0+ EPS ;
 232   
 233     Sstore(Wkn,tot_vol,case)=storage.L;
****                                      $141
**** 141  Symbol declared but no values have been assigned. Check for missing
****         data definition, assignment, data loading or implicit assignment
****         via a solve statement.
****         A wild shot: You may have spurious commas in the explanatory
****         text of a declaration. Check symbol reference list.
 234   
 235     ModelResults(Wkn,tot_vol,"case1","SolStat")= Model2.solvestat;
 236     ModelResults(Wkn,tot_vol,"case1","ModStat")= Model2.modelstat;
 237     ModelResults(Wkn,tot_vol,"case2","SolStat")= Model2.solvestat;
 238     ModelResults(Wkn,tot_vol,"case2","ModStat")= Model2.modelstat;
 239     ModelResults(Wkn,tot_vol,"case3","SolStat")= Model2.solvestat;
 240     ModelResults(Wkn,tot_vol,"case3","ModStat")= Model2.modelstat;
 241     ModelResults(Wkn,tot_vol,"case4","SolStat")= Model2.solvestat;
 242     ModelResults(Wkn,tot_vol,"case4","ModStat")= Model2.modelstat;
 243     ModelResults(Wkn,tot_vol,"case5","SolStat")= Model2.solvestat;
 244     ModelResults(Wkn,tot_vol,"case5","ModStat")= Model2.modelstat;
 245   
 246     ModelResults(Wkn,tot_vol,case,"SolStat")= Model1.solvestat;
 247     ModelResults(Wkn,tot_vol,case,"ModStat")= Model1.modelstat;
 248   
 249     Mar_Ramp(Wkn,tot_vol,case,p) = EQ6_Rel_Range.M(p)+ EPS;
****                                                  $141
**** 141  Symbol declared but no values have been assigned. Check for missing
****         data definition, assignment, data loading or implicit assignment
****         via a solve statement.
****         A wild shot: You may have spurious commas in the explanatory
****         text of a declaration. Check symbol reference list.
 250   
 251     option clear=ObjectiveVal,clear=release,clear=Steady_Release;
 252  );
 253   
 254     DISPLAY FStore,XStore_steady,XStore_unsteady,RStore_steady,RStore_unste
      ady,Sstore;
 255   
 256  *-------------------------------------------------------------------------
      -----*
 257   
 258  * Dump all input data and results to a GAMS gdx file
 259  Execute_Unload "April2018(Weekend).gdx";
 260  * Dump the gdx file to an Excel workbook
 261  Execute "gdx2xls April2018(Weekend).gdx"

**** 12 ERROR(S)   0 WARNING(S)
GAMS 33.2.0  r4f23b21 Released Dec  1, 2020 WEX-WEI x86 64bit/MS Windows - 06/16/21 23:18:03 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  E:\Class project\GCD_BugFlowExperiment
                                          \April 2018\Weekend-Weekday\April2018_
                                          Wknd.gms
     2       80 CALL           1      80  GDXXRW.EXE input=Input_April2018.xlsx 
                                          output=April2018(Weekend).gdx set=d rn
                                          g=day!A1 Rdim=1 par=Inflow rng=inflow!
                                          A1 Rdim=1  par=evap rng=Evaporation!A1
                                          Rdim=1


COMPILATION TIME     =        1.312 SECONDS      3 MB  33.2.0 r4f23b21 WEX-WEI


USER: Small MUD - 5 User License                     G200622/0001AP-GEN
      Utah State University, Utah Water Research Laboratory      DC7087
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      E:\Class project\GCD_BugFlowExperiment\April 2018\Weekend-Weekday\Apr
           il2018_Wknd.gms
Output     E:\Class project\GCD_BugFlowExperiment\June 2018\Saturday Model\April
           2018_Wknd.lst

**** USER ERROR(S) ENCOUNTERED
